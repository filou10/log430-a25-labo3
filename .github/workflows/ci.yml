name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ci:
    name: Build + Integration Tests (GitHub runner)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Docker network exists
        run: |
          docker network inspect labo03-network >/dev/null 2>&1 || docker network create labo03-network

      - name: Write .env
        run: |
          cat > .env << 'EOF'
          DB_HOST=mysql
          DB_PORT=3306
          DB_NAME=labo03_db
          DB_USER=labo03
          DB_PASS=labo03
          REDIS_HOST=redis
          REDIS_PORT=6379
          REDIS_DB=0
          EOF

      - name: Reset any previous stack
        run: |
          docker compose down --remove-orphans || true

      - name: Build & start services
        run: docker compose up -d --build

      - name: Wait for services to be healthy
        shell: bash
        run: |
          set -e
          echo "Waiting for MySQL..."
          timeout 90 bash -c 'until docker compose exec -T mysql mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; do sleep 3; done'
          echo "Waiting for Redis..."
          timeout 60 bash -c 'until docker compose exec -T redis redis-cli ping | grep -q PONG; do sleep 2; done'
          # small grace for app boot
          sleep 8

      - name: Run tests inside app container
        run: docker compose exec -T store_manager bash -c "PYTHONPATH=. pytest -v --cache-clear"

      - name: Cleanup
        if: always()
        run: |
          docker compose down --remove-orphans || true
          # clean caches that might be created by root inside containers
          sudo find . -name '__pycache__' -type d -exec rm -rf {} + 2>/dev/null || true
          sudo find . -name '.pytest_cache' -type d -exec rm -rf {} + 2>/dev/null || true
          sudo find . -name '*.pyc' -delete 2>/dev/null || true

  deploy:
    name: Deploy on self-hosted runner
    runs-on: self-hosted
    needs: ci
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Clean up caches
        run: |
          sudo find . -name '__pycache__' -type d -exec rm -rf {} + 2>/dev/null || true
          sudo find . -name '.pytest_cache' -type d -exec rm -rf {} + 2>/dev/null || true
          sudo find . -name '*.pyc' -delete 2>/dev/null || true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Ensure Docker network exists
        run: |
          docker network inspect labo03-network >/dev/null 2>&1 || docker network create labo03-network

      - name: Write .env for runtime
        run: |
          cat > .env << 'EOF'
          DB_HOST=mysql
          DB_PORT=3306
          DB_NAME=labo03_db
          DB_USER=labo03
          DB_PASS=labo03
          REDIS_HOST=redis
          REDIS_PORT=6379
          REDIS_DB=0
          EOF

      - name: Deploy with Docker Compose
        run: |
          docker compose down --remove-orphans || true
          docker compose up -d --build
